name: release-workflow
on:
  push:
    tags:
      - '*'
env:
  COMPOSE_PROJECT_NAME: "circleci"
jobs:
  build-pack-release:
    name: build-pack-release
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
      REGISTRY_PATH: ${{secrets.GCR_PATH}}
      REGISTRY_HOST: ${{secrets.GCR_HOST}}
      DOCKER_REGISTRY_USERNAME: ${{secrets.GCR_USERNAME}}
    steps:
      - name: Checkout code.
        uses: actions/checkout@master
      - name: Define tag.
        run: echo "RELEASE_TAG=$(git describe --tags)" >> $GITHUB_ENV
      - name: Docker registry login.
        run: docker login $REGISTRY_HOST --username $DOCKER_REGISTRY_USERNAME --password ${{secrets.GCR_PASSWORD}}
      - name: Configuration reset.
        run: make config-reset
      - name: Build the server for linux.
        run: |
          mkdir bin
          make build-linux
      - name: Package the linux server build.
        run: make package BUILD_NUMBER=${RELEASE_TAG}
      - name: Release docker (build and push) app server.
        run: |
          docker build -t ${REGISTRY_HOST}/${REGISTRY_PATH}/app:${RELEASE_TAG} -f docker/Dockerfile .
          docker push ${REGISTRY_HOST}/${REGISTRY_PATH}/app:${RELEASE_TAG}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            This is auto-generated by GitHub actions.
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID
          # to get its outputs object, which include a `upload_url`. See this
          # blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/mattermost-team-linux-amd64.tar.gz
          asset_name: mattermost-team-linux-amd64.tar.gz
          asset_content_type: application/gzip
